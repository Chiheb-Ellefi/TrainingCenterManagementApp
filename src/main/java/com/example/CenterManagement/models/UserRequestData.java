package com.example.CenterManagement.models;

import com.example.CenterManagement.entities.user.Gender;
import com.example.CenterManagement.entities.user.Role;
import com.example.CenterManagement.entities.user.TrainerType;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.Getter;

import java.util.Date;

@Getter
@Schema(description = "Request data object for creating or updating a user")
public class UserRequestData {

    @Schema(
            description = "Unique identifier of the user (autogenerated)",
            example = "1",
            accessMode = Schema.AccessMode.READ_ONLY // Indicates this field is read-only and autogenerated
    )
    private Long userId;

    @NotBlank(message = "Username cannot be blank")
    @Size(min = 3, max = 50, message = "Username must be between 3 and 50 characters")
    @Schema(
            description = "Username of the user",
            example = "johndoe",
            requiredMode = Schema.RequiredMode.REQUIRED
    )
    private String username;

    @NotBlank(message = "Email cannot be blank")
    @Schema(
            description = "Email address of the user (must be unique)",
            example = "johndoe@example.com",
            requiredMode = Schema.RequiredMode.REQUIRED
    )
    private String email;

    @NotBlank(message = "Password cannot be blank")
    @Size(min = 6, max = 100, message = "Password must be between 6 and 100 characters")
    @Schema(
            description = "Password of the user",
            example = "SecurePassword123!",
            requiredMode = Schema.RequiredMode.REQUIRED
    )
    private String password;

    @NotNull(message = "Role cannot be null")
    @Schema(
            description = "Role of the user (e.g., ADMIN, TRAINER, PARTICIPANT)",
            example = "PARTICIPANT",
            allowableValues = {"ADMIN", "TRAINER", "PARTICIPANT","MANAGER"},
            requiredMode = Schema.RequiredMode.REQUIRED
    )
    private Role role;


    @Size(min = 10, max = 15, message = "Phone number must be between 10 and 15 characters")
    @Schema(
            description = "Primary phone number of the user",
            example = "+1234567890",
            requiredMode = Schema.RequiredMode.NOT_REQUIRED
    )
    private String phoneNumber;
    @Schema(
            description = "Birth date of the user",
            example = "1990-01-01",
            type = "string",
            format = "date",
            requiredMode = Schema.RequiredMode.NOT_REQUIRED
    )
    private Date dateOfBirth;

    @Schema(
            description = "Gender of the user",
            example = "MALE",
            allowableValues = {"MALE", "FEMALE"},
            requiredMode = Schema.RequiredMode.NOT_REQUIRED
    )
    private Gender gender;

    @Schema(
            description = "Profile picture URL of the user",
            example = "https://example.com/profile.jpg",
            requiredMode = Schema.RequiredMode.NOT_REQUIRED
    )
    private String profilePicture;

    @Size(max = 255, message = "Description must not exceed 255 characters")
    @Schema(
            description = "Short description about the user",
            example = "A passionate fitness enthusiast",
            requiredMode = Schema.RequiredMode.NOT_REQUIRED
    )
    private String description;

    @Schema(
            description = "Type of the trainer (only applicable if role is TRAINER)",
            example = "INTERNAL",
            allowableValues = {"INTERNAL", "EXTERNAL"},
            requiredMode = Schema.RequiredMode.NOT_REQUIRED
    )
    private TrainerType trainerType;

    @Schema(
            description = "Name of the employer (only applicable if role is TRAINER)",
            example = "FitLife Gym",
            requiredMode = Schema.RequiredMode.NOT_REQUIRED
    )
    private String employerName;

    @NotBlank(message = "Structure name cannot be blank (only applicable if role is PARTICIPANT)")
    @Size(min = 1, max = 100, message = "Structure name must be between 1 and 100 characters")
    @Schema(
            description = "Name of the structure associated with the user (only applicable if role is PARTICIPANT)",
            example = "FitLife Gym",
            requiredMode = Schema.RequiredMode.NOT_REQUIRED
    )
    private String structure;

    @NotBlank(message = "Profile cannot be blank (only applicable if role is PARTICIPANT)")
    @Size(min = 1, max = 100, message = "Profile must be between 1 and 100 characters")
    @Schema(
            description = "Profile of the user (only applicable if role is PARTICIPANT)",
            example = "Fitness Enthusiast",
            requiredMode = Schema.RequiredMode.NOT_REQUIRED
    )
    private String profile;
}